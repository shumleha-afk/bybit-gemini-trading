import streamlit as st
import requests

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ===
st.set_page_config(
    page_title="Bybit TradingView + Gemini AI",
    layout="wide",
    initial_sidebar_state="collapsed"
)

# === –ó–∞–≥–æ–ª–æ–≤–æ–∫ ===
st.title("üìà Bybit TradingView + ü§ñ Gemini AI –ê–Ω–∞–ª–∏–∑")
st.markdown("---")

# === –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞ ===
symbol = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä: BTCUSDT, ETHUSDT)", value="BTCUSDT").strip().upper()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å–∏–º–≤–æ–ª–∞
if not symbol or not symbol.replace("USDT", "").replace("USD", "").isalpha():
    st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å–∏–º–≤–æ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä: BTCUSDT)")
    st.stop()

# === –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ TradingView-–≤–∏–¥–∂–µ—Ç–∞ —á–µ—Ä–µ–∑ iframe ===
tradingview_url = f"https://s.tradingview.com/widgetembed/?frameElementId=tradingview_123&symbol=BYBIT:{symbol}.P&interval=60&theme=dark&style=1&locale=ru&toolbar_bg=%23f1f3f6&enable_publishing=false&hide_top_toolbar=false&hide_side_toolbar=true&save_image=true&studies=%5B%22STD%3BCumulative%251Volume%251Delta%22%2C%22STD%3BDEMA%22%2C%22STD%3BOpen%251Interest%22%2C%22STD%3BPivot%251Points%251Standard%22%2C%22STD%3BDivergence%251Indicator%22%5D&hide_volume=false&hide_legend=false&withdateranges=false&hotlist=false&calendar=false&details=false&watchlist=%5B%5D&compareSymbols=%5B%5D&studies_overrides=%7B%7D&overrides=%7B%22paneProperties.backgroundColor%22%3A%22%230F0F0F%22%2C%22paneProperties.gridColor%22%3A%22rgba(242%2C%20242%2C%20242%2C%200.06)%22%7D&timezone=Europe%2FMoscow"

st.components.v1.iframe(
    src=tradingview_url,
    width=1200,
    height=700,
    scrolling=False
)

# === –ö–Ω–æ–ø–∫–∞ –¥–ª—è AI-–∞–Ω–∞–ª–∏–∑–∞ ===
if st.button("ü§ñ –ü–æ–ª—É—á–∏—Ç—å AI-–∞–Ω–∞–ª–∏–∑ –æ—Ç Gemini"):
    with st.spinner("–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å Bybit –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º..."):
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–≤–µ—á–∏ —Å Bybit (–ø—É–±–ª–∏—á–Ω—ã–π API)
            url = "https://api.bybit.com/v5/market/kline"
            params = {
                "category": "linear",
                "symbol": symbol,
                "interval": "60",
                "limit": 20
            }
            resp = requests.get(url, params=params, timeout=10)
            data = resp.json()
            
            if data.get("retCode") != 0:
                st.error("–û—à–∏–±–∫–∞ Bybit API: " + data.get("retMsg", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"))
                st.stop()
            
            candles = data["result"]["list"]
            prices = [float(c[4]) for c in candles]  # –∑–∞–∫—Ä—ã—Ç–∏–µ
            trend = "–≤–æ—Å—Ö–æ–¥—è—â–∏–π" if prices[-1] > prices[0] else "–Ω–∏—Å—Ö–æ–¥—è—â–∏–π"
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ Gemini API –¥–ª—è –¥–µ–º–æ)
            analysis = f"""
            üîç **–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è {symbol}:**
            - –ü–æ—Å–ª–µ–¥–Ω—è—è —Ü–µ–Ω–∞: **{prices[-1]:.2f} USDT**
            - –¢—Ä–µ–Ω–¥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —á–∞—Å–æ–≤: **{trend}**
            - –ò–∑–º–µ–Ω–µ–Ω–∏–µ: **{((prices[-1] / prices[0]) - 1) * 100:.2f}%**
            
            üí° *–î–ª—è –ø–æ–ª–Ω–æ–≥–æ AI-–∞–Ω–∞–ª–∏–∑–∞ —á–µ—Ä–µ–∑ Gemini API ‚Äî –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à API-–∫–ª—é—á –≤ –∫–æ–¥.*
            """
            st.success(analysis)
            
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞: {str(e)}")