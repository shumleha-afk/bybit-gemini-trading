import streamlit as st
import requests
import google.generativeai as genai
import os

st.set_page_config(page_title="Binance + Gemini AI", layout="wide")
st.title("üìà Binance TradingView + ü§ñ Gemini AI –ê–Ω–∞–ª–∏–∑")
st.markdown("---")

symbol = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä: BTCUSDT)", value="BTCUSDT").strip().upper()

if not symbol or not symbol.replace("USDT", "").replace("USD", "").isalpha():
    st.warning("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å–∏–º–≤–æ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä: BTCUSDT)")
    st.stop()

# –ì—Ä–∞—Ñ–∏–∫ TradingView (Binance)
tradingview_url = f"https://s.tradingview.com/widgetembed/?symbol=BINANCE:{symbol}&interval=60"
st.components.v1.iframe(src=tradingview_url, width=1200, height=700, scrolling=False)

if st.button("ü§ñ –ü–æ–ª—É—á–∏—Ç—å AI-–∞–Ω–∞–ª–∏–∑ –æ—Ç Gemini"):
    with st.spinner("–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å Binance..."):
        try:
            # –ó–∞–ø—Ä–æ—Å –∫ Binance API
            url = "https://api.binance.com/api/v3/klines"
            params = {"symbol": symbol, "interval": "1h", "limit": 20}
            resp = requests.get(url, timeout=10)
            resp.raise_for_status()
            candles = resp.json()
            
            if not candles:
                st.error("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç Binance")
                st.stop()
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            data_str = "\n".join([
                f"–í—Ä–µ–º—è: {c[0]}, O: {c[1]}, H: {c[2]}, L: {c[3]}, C: {c[4]}"
                for c in candles[-10:]
            ])
            
            # Gemini API
            api_key = os.getenv("GEMINI_API_KEY")
            if not api_key:
                st.error("–î–æ–±–∞–≤—å—Ç–µ GEMINI_API_KEY –≤ Secrets")
                st.stop()
                
            genai.configure(api_key=api_key)
            model = genai.GenerativeModel("gemini-1.5-pro")
            prompt = f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —á–∞—Å–æ–≤—ã—Ö —Å–≤–µ—á–µ–π {symbol} –Ω–∞ Binance:\n{data_str}"
            response = model.generate_content(prompt)
            
            st.success("‚úÖ AI-–∞–Ω–∞–ª–∏–∑ –æ—Ç Gemini:")
            st.markdown(response.text)
            
        except Exception as e:
          st.error(f"–û—à–∏–±–∫–∞: {str(e)}")
